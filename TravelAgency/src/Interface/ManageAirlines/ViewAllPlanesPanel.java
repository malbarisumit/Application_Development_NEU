/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.ManageAirlines;

import Business.Airline;
import Business.Airplane;
import Business.AirplaneFleet;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


public class ViewAllPlanesPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewAllPlanesPanel
     */
    private Airline airline;
    private JPanel userProcessContainer;

    public ViewAllPlanesPanel(Airline airline, JPanel userProcessContainer) {
        this.airline = airline;
        this.userProcessContainer = userProcessContainer;
        initComponents();

        populateAiplaneTable();

    }

    public void populateAiplaneTable() {
        airlineNameTextField.setText(airline.getNameOfAirline());
        AirplaneFleet airplaneFleet = airline.getFleet();
        DefaultTableModel dtm = (DefaultTableModel) viewAirplanesTable.getModel();
        dtm.setRowCount(0);
        for (Airplane airplane : airplaneFleet.getAirplaneFleet()) {
            Object row[] = new Object[5];
            row[0] = airplane;
            row[1] = airplane.getModelNumber();
            row[2] = airplane.getManufacturingCompany();
            row[3] = airplane.getManufacturingYear();
            row[4] = airplane.getTotalSeats();
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        airlineNameTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        viewAirplanesTable = new javax.swing.JTable();
        addAirplaneButton = new javax.swing.JButton();
        updateAirplaneButton = new javax.swing.JButton();
        deleteAirplaneButton = new javax.swing.JButton();
        createflightButton = new javax.swing.JButton();
        saveAirplaneButton = new javax.swing.JButton();
        backButtonViewAllPlanes = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 102, 102));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        airlineNameTextField.setEnabled(false);
        add(airlineNameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 232, 240, 30));

        jLabel5.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel5.setText("Airline Name:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 190, -1));

        viewAirplanesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airplane Id", "Model Num", "Company", "Manuf. Year"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Short.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(viewAirplanesTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 70, 540, 120));

        addAirplaneButton.setBackground(new java.awt.Color(0, 0, 0));
        addAirplaneButton.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        addAirplaneButton.setForeground(new java.awt.Color(255, 255, 255));
        addAirplaneButton.setText("Add Airplane");
        addAirplaneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAirplaneButtonActionPerformed(evt);
            }
        });
        add(addAirplaneButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 240, 220, -1));

        updateAirplaneButton.setBackground(new java.awt.Color(0, 0, 0));
        updateAirplaneButton.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        updateAirplaneButton.setForeground(new java.awt.Color(255, 255, 255));
        updateAirplaneButton.setText("Update Airplane");
        updateAirplaneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateAirplaneButtonActionPerformed(evt);
            }
        });
        add(updateAirplaneButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 240, 230, -1));

        deleteAirplaneButton.setBackground(new java.awt.Color(0, 0, 0));
        deleteAirplaneButton.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        deleteAirplaneButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteAirplaneButton.setText("Delete Airplane");
        deleteAirplaneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAirplaneButtonActionPerformed(evt);
            }
        });
        add(deleteAirplaneButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 310, 230, -1));

        createflightButton.setBackground(new java.awt.Color(0, 0, 0));
        createflightButton.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        createflightButton.setForeground(new java.awt.Color(255, 255, 255));
        createflightButton.setText("Create Flight");
        createflightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createflightButtonActionPerformed(evt);
            }
        });
        add(createflightButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 240, 30));

        saveAirplaneButton.setBackground(new java.awt.Color(0, 0, 0));
        saveAirplaneButton.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        saveAirplaneButton.setForeground(new java.awt.Color(255, 255, 255));
        saveAirplaneButton.setText("Save");
        saveAirplaneButton.setEnabled(false);
        saveAirplaneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAirplaneButtonActionPerformed(evt);
            }
        });
        add(saveAirplaneButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 320, 150, -1));

        backButtonViewAllPlanes.setBackground(new java.awt.Color(0, 0, 0));
        backButtonViewAllPlanes.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        backButtonViewAllPlanes.setForeground(new java.awt.Color(255, 255, 255));
        backButtonViewAllPlanes.setText("Back");
        backButtonViewAllPlanes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonViewAllPlanesActionPerformed(evt);
            }
        });
        add(backButtonViewAllPlanes, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 35, 210, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("View Details");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(112, 9, 813, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void addAirplaneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAirplaneButtonActionPerformed
        // TODO add your handling code here:
        CreateAirplane createAirplane = new CreateAirplane(airline.getFleet(), userProcessContainer, airline.getNameOfAirline());
        userProcessContainer.add("AddingAirplane", createAirplane);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.next(userProcessContainer);
    }//GEN-LAST:event_addAirplaneButtonActionPerformed

    private void updateAirplaneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateAirplaneButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = viewAirplanesTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }
        saveAirplaneButton.setEnabled(true);
        updateAirplaneButton.setEnabled(false);
        viewAirplanesTable.setEnabled(true);
        addAirplaneButton.setEnabled(false);
        deleteAirplaneButton.setEnabled(true);
    }//GEN-LAST:event_updateAirplaneButtonActionPerformed

    private void deleteAirplaneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAirplaneButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = viewAirplanesTable.getSelectedRow();
        if (selectedRow < 0)
            JOptionPane.showMessageDialog(null, "Please select a row");
        else {
            int dialogBtn = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "Please Confirm to Delete the selected Airplane", "Warning", dialogBtn);
            if (dialogResult == JOptionPane.YES_OPTION) {
                Airplane airplane = (Airplane) viewAirplanesTable.getValueAt(selectedRow, 0);
                airline.getFleet().delAirplane(airplane);
                JOptionPane.showMessageDialog(null, "Selected Airplane deleted successfully");
                populateAiplaneTable();
            }
        }
    }//GEN-LAST:event_deleteAirplaneButtonActionPerformed

    private void createflightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createflightButtonActionPerformed
        int selectedRow = viewAirplanesTable.getSelectedRow();
        if (selectedRow < 0)
            JOptionPane.showMessageDialog(null, "Please select a row");
        else {
            Airplane airplane = (Airplane) viewAirplanesTable.getValueAt(selectedRow, 0);
            SchedulePlane scheduleFlight = new SchedulePlane(airline, userProcessContainer, airplane);
            userProcessContainer.add("AddingAirplane", scheduleFlight);
            CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
            cardLayout.next(userProcessContainer);
        }
    }//GEN-LAST:event_createflightButtonActionPerformed

    private void saveAirplaneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAirplaneButtonActionPerformed
        // TODO add your handling code here:

        byte flag = 0;
        int selectedRow = viewAirplanesTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row");
        } else {
            DefaultTableModel dtm = (DefaultTableModel) viewAirplanesTable.getModel();
            dtm.getValueAt(selectedRow, 1);
            Airplane airplane = (Airplane) viewAirplanesTable.getValueAt(selectedRow, 0);
            try {
                if ((String.valueOf(viewAirplanesTable.getValueAt(selectedRow, 1)).isEmpty())
                        || (String.valueOf(viewAirplanesTable.getValueAt(selectedRow, 2)).isEmpty())
                        || (String.valueOf(viewAirplanesTable.getValueAt(selectedRow, 3)).isEmpty())
                        || (String.valueOf(viewAirplanesTable.getValueAt(selectedRow, 4)).isEmpty())) {
                    flag = 1;
                    JOptionPane.showMessageDialog(null, "Enter all the details!!", "Error", 0);
                    populateAiplaneTable();
                } else {
                    short year = Short.parseShort(String.valueOf(viewAirplanesTable.getValueAt(selectedRow, 3)));
                    if ((year >= 0)) {

                        airplane.setManufacturingCompany(String.valueOf(viewAirplanesTable.getValueAt(selectedRow, 2)));
                        airplane.setManufacturingYear(year);
                        airplane.setModelNumber(String.valueOf(viewAirplanesTable.getValueAt(selectedRow, 1)));
                        JOptionPane.showMessageDialog(null, "Save successfully!!");
                    } else {
                        flag = 1;
                        JOptionPane.showMessageDialog(null, "values cant be neagtive!!", "Error", 0);
                        populateAiplaneTable();
                    }
                }
            } catch (Exception e) {
                populateAiplaneTable();
                JOptionPane.showMessageDialog(null, "Please enter integers for Id and year!!", "Error", 0);                
                
            }
        }
        if (flag == 0) {
            saveAirplaneButton.setEnabled(false);
            updateAirplaneButton.setEnabled(true);
            addAirplaneButton.setEnabled(true);
            deleteAirplaneButton.setEnabled(false);
            viewAirplanesTable.setEnabled(false);
            populateAiplaneTable();
        }
    }//GEN-LAST:event_saveAirplaneButtonActionPerformed

    private void backButtonViewAllPlanesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonViewAllPlanesActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonViewAllPlanesActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAirplaneButton;
    private javax.swing.JTextField airlineNameTextField;
    private javax.swing.JButton backButtonViewAllPlanes;
    private javax.swing.JButton createflightButton;
    private javax.swing.JButton deleteAirplaneButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton saveAirplaneButton;
    private javax.swing.JButton updateAirplaneButton;
    private javax.swing.JTable viewAirplanesTable;
    // End of variables declaration//GEN-END:variables
}
